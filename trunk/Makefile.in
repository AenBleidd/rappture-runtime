###########################################################################
# Makefile - build and install all packages required by Rappture runtime
# 
# To build everything, type:
# 	./configure --prefix=/apps/rappture/20060907
# 	make all
# 	
# To build individual package, tcl, for example:
# 	make tcl
#
#############################################################################
basedir=@RR_SRC_DIR@
Rappture=@prefix@
RP_SRC=$(basedir)/rappture

#definitions for installation on various systems

build_dir=$(basedir)/build

ifndef mydate
build_date := $(shell date +%Y%m%d)
else
build_date = $(mydate)
endif

INSTALL_DIR_WEB=www-data@developer.nanohub.org:/var/www/downloads/rappture
Tarfile_linux=rappture-linux-i686-$(build_date)
Tarfile_mac=rappture-macosx-$(build_date)

all: rappture
pkgs: tcl tk itcl tdom blt tkimg htmlwidget shape expat scew tls tcllib vtk pymol zlib libb64

#################################################
tcl:
	echo "BUIDING TCL8.4.11...." 
	cd $(basedir)/tcl8.4.11/unix && ./configure --enable-shared --disable-threads --with-readline --prefix=$(Rappture)
	make -C $(basedir)/tcl8.4.11/unix
	make -C $(basedir)/tcl8.4.11/unix install
	cd $(Rappture)/bin; rm -f tclsh; ln -s tclsh8.4 tclsh
	if test "`uname`" == "Linux"; then \
		cd $(Rappture)/lib; rm -f libtcl8.4.so.0; ln -s libtcl8.4.so libtcl8.4.so.0; \
	fi

#################################################
tk:
	echo "BUIDING Tk8.4.11...." 
	cd $(basedir)/tk8.4.11/unix && ./configure --enable-shared --disable-threads --prefix=$(Rappture) --with-tcl=$(Rappture)/lib
	make -C $(basedir)/tk8.4.11/unix
	make -C $(basedir)/tk8.4.11/unix install
	cd $(Rappture)/bin; rm -f wish; ln -s wish8.4 wish;
	if test "`uname`" == "Linux"; then \
		cd $(Rappture)/lib; rm -f libtk8.4.so.0; ln -s libtk8.4.so libtk8.4.so.0; \
	fi

#################################################
itcl:
	echo "BUIDING itcl3.2.1...."
	cd $(basedir)/itcl3.2.1 && ./configure --enable-shared --disable-threads --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-tk=$(Rappture)/lib
	make -C $(basedir)/itcl3.2.1 all
	make -C $(basedir)/itcl3.2.1 install

#################################################
tdom:
	echo "BUIDING tdom-0.8.0..."
	cd $(basedir)/tDOM-0.8.0/unix && ../configure --enable-shared --disable-threads --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-tk=$(Rappture)/lib
	make -C $(basedir)/tDOM-0.8.0/unix
	make -C $(basedir)/tDOM-0.8.0/unix install

#################################################
blt:
	echo "BUIDING blt2.4z..."
	cd $(basedir)/blt2.4z && ./configure --enable-shared --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-tcllibs=$(Rappture)/lib --with-tclincls=$(Rappture)/include --with-tk=$(Rappture)/lib --with-tklibs=$(Rappture)/lib --with-tkincls=$(Rappture)/include --x-includes=/usr/X11R6/include/X11
	make -C $(basedir)/blt2.4z
	make -C $(basedir)/blt2.4z install

#################################################
tkimg:
	echo "BUIDING tkimg1.3 ... ..."
	cd $(basedir)/tkimg1.3 && ./configure --prefix=$(Rappture) --with-tclconf=$(Rappture)/lib --with-tkconf=$(Rappture)/lib
	make -C $(basedir)/tkimg1.3
	make -C $(basedir)/tkimg1.3 install

#################################################
htmlwidget:
	echo "BUIDING htmlwidget..."
	cd $(basedir)/htmlwidget-3a14 && ./configure --enable-shared --disable-threads --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-tk=$(Rappture)/lib
	make -C $(basedir)/htmlwidget-3a14
	make -C $(basedir)/htmlwidget-3a14 install

#################################################
shape:
	echo "BUIDING Shape0.4 ......"
	cd $(basedir)/shape0.4/unix && ./configure --disable-threads --prefix=$(Rappture) --with-tclconf=$(Rappture)/lib --with-tkconf=$(Rappture)/lib
	make -C $(basedir)/shape0.4/unix
	make -C $(basedir)/shape0.4/unix install

#################################################
expat:
	echo "BUIDING expat-1.95.8 ......."
	cd $(basedir)/expat-1.95.8 && ./configure --prefix=$(Rappture)
	make -C $(basedir)/expat-1.95.8
	make -C $(basedir)/expat-1.95.8 install

#################################################
scew:
	echo "BUIDING scew-0.4.0 ......."
	cd $(basedir)/scew-0.4.0 && ./configure --prefix=$(Rappture)
	make -C $(basedir)/scew-0.4.0
	make -C $(basedir)/scew-0.4.0 install
	cp $(basedir)/scew-0.4.0/scew/x*.h $(Rappture)/include/scew/.

#################################################
tls:
	echo "BUIDING tls1.5..."
	cd $(basedir)/tls1.5 && ./configure --enable-shared --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-ssl-dir=/usr
	make -C $(basedir)/tls1.5
	make -C $(basedir)/tls1.5 install

#################################################
tcllib:
	echo "BUIDING tcllib-1.9..."
	cd $(basedir)/tcllib-1.9 && ./configure --enable-shared --prefix=$(Rappture) --with-tcl=$(Rappture)/lib --with-tcllibs=$(Rappture)/lib --with-tclincls=$(Rappture)/include
	make -C $(basedir)/tcllib-1.9
	make -C $(basedir)/tcllib-1.9 install

#############################################################################
# Install vtk 4.4 from binary
#############################################################################
vtk:
	cd $(basedir)/vtk.bin; make RAPPTURE=$(Rappture)

#################################################
pymol:
	echo "BUIDING pymol-1.00b19..."
	cd $(basedir)/pymol-1.00b19 && ./configure --prefix=$(Rappture)
	make -C $(basedir)/pymol-1.00b19
	make -C $(basedir)/pymol-1.00b19 install

#################################################
zlib:
	echo "BUIDING zlib-1.2.3 ......."
	cd $(basedir)/zlib-1.2.3 && CFLAGS="-fPIC" ./configure --shared --prefix=$(Rappture)
	make -C $(basedir)/zlib-1.2.3
	make -C $(basedir)/zlib-1.2.3 install
	cd $(basedir)/zlib-1.2.3 && CFLAGS="-fPIC" ./configure --prefix=$(Rappture)
	make -C $(basedir)/zlib-1.2.3
	make -C $(basedir)/zlib-1.2.3 install

#################################################
libb64:
	echo "BUIDING libb64 ......."
	make -C $(basedir)/libb64-1.1/src distclean;
	make -C $(basedir)/libb64-1.1/src libb64;
	if test ! -d $(Rappture)/include/b64; then \
		mkdir -p $(Rappture)/include/b64; \
	fi; \
	if test ! -d $(Rappture)/lib; then \
		mkdir -p $(Rappture)/lib; \
	fi; \
	cp $(basedir)/libb64-1.1/src/libb64.a $(Rappture)/lib/.;
	cp $(basedir)/libb64-1.1/src/libb64.so.0.0 $(Rappture)/lib/.;
	cp $(basedir)/libb64-1.1/include/b64/*.h $(Rappture)/include/b64/.;
	cd $(Rappture)/lib; ln -s libb64.so.0.0 libb64.so;

#############################################################################
# install-rp:
# 	- check out rappture from repository if not already in $(basedir)
# 	- clean up old compiled libraries
# 	- compile new core and bindings libraries
# 	- install rappture for TCL
# 	- install rappture for Python
# 	- install rappture for Perl
# 	- install rappture for Matlab
# 	- install rappture for Octave
# 	- install rappture apps (driver, rappture, rerun) in $(Rappture) dir
#############################################################################

rp_update:
	set -x; \
	if test -d $(RP_SRC); then \
		cd $(RP_SRC); svn update ;\
	else \
		cd $(basedir); \
		svn checkout https://repo.nanohub.org/svn/rappture/trunk rappture; \
	fi

rappture: create_install_dir pkgs rp_update
	set -x; \
	cd $(RP_SRC); \
	make clean; \
	./configure --prefix=$(Rappture) --with-matlab=@MATLAB_HOME@ @MEX_ARCH@; \
	make install build_pkgs;

create_install_dir:
	if test ! -d $(Rappture); then \
		mkdir -p $(Rappture); \
	fi; \

#############################################################################
clean:
	find $(Rappture) -name .svn | xargs rm -rf

cleanall:
#	rm -rf $(Rappture)/*
	rm -f output.*

cleanbuild:
	rm -rf $(build_dir)/*

distclean: cleanall cleanbuild
	rm -rf config.status config.log Makefile rappture
