AC_INIT(NOTES)

VERSION=0.0.1

AC_PREFIX

#------------------------------------------------------------------------
# Handle the --prefix=... option
#------------------------------------------------------------------------

if test "${prefix}" = "NONE"; then
    prefix=/usr/local
fi
if test "${exec_prefix}" = "NONE"; then
    exec_prefix=$prefix
fi

# RR_SRC_DIR=`cd $srcdir/..; pwd`
RR_SRC_DIR=`pwd`
AC_SUBST(RR_SRC_DIR)

dnl find and test the C compiler
AC_PROG_CC
AC_LANG_C

# AC_PROG_INSTALL
AC_PROG_MAKE_SET

AC_HEADER_STDC
AC_CHECK_FUNC(atol,,AC_MSG_ERROR(oops! no atol ?!?))

AC_SUBST(VERSION)

BLT=blt2.4z
EXPAT=expat-2.0.1
HTMLWIDGET=htmlwidget-3a14
ITCL=itcl3.3
ITK=itk3.3
LIBB64=libb64-1.1
PYMOL=pymol-1.00b19
SHAPE=shape0.4/unix
TCL=tcl8.4.19/unix
TCLLIB=tcllib-1.9
TDOM=tDOM-0.8.2
TK=tk8.4.19/unix
TKIMG=tkimg1.3
TLS=tls1.5
VORONOI=voronoi
VTK=VTK4.4 
ZLIB=zlib-1.2.3

# Option default 
# 
with_blt=yes
with_vtk=no
with_itcl=yes
with_htmlwidget=yes
with_zlib=no
with_shape=yes
with_matlab=yes
with_voronoi=yes
with_tls=yes
with_tcl=yes
with_tk=yes
with_tcllib=yes
with_tkimg=yes
with_tdom=yes
with_pymol=no

AC_ARG_ENABLE(64bit,       [  --enable-64bit              Enable 64bit support (where applicable)])
X86_64=
if test "x$enable_64bit" != "x" ; then
    echo Enabling 64-bit support
    X86_64="--enable-64bit"
fi

AC_ARG_WITH([blt],
  AS_HELP_STRING([--with-blt[=DIR]], 
    [Build blt2.4z @<:@default=yes@:>@])],
    [with_blt=$withval])

AC_ARG_WITH([expat],
  AS_HELP_STRING([--with-expat[=DIR]], 
    [Build expat-2.0.1 @<:@default=yes@:>@])],
    [with_expat=$withval])

AC_ARG_WITH([htmlwidget],
  [AS_HELP_STRING([--with-htmlwidget[=DIR]], 
    [Build htmlwidget @<:@default=yes@:>@])],
    [with_htmlwidget=$withval])

AC_ARG_WITH([itcl],
  [AS_HELP_STRING([--with-itcl[=DIR]], 
    [Build itcl-3.3 @<:@default=yes@:>@])],
    [with_itcl=$withval])

AC_ARG_WITH([pymol],
  [AS_HELP_STRING([--with-pymol[=DIR]], 
     [Build pymol @<:@default=no@:>@])],
    [with_pymol=$withval])

AC_ARG_WITH([shape],
  [AS_HELP_STRING([--with-shape[=DIR]], 
    [Build shape-0.4 @<:@default=yes@:>@])],
    [with_shape=$withval])

AC_ARG_WITH([tDOM],
  [AS_HELP_STRING([--with-tDOM[=DIR]], 
    [Build tDOM-0.8.2 @<:@default=yes@:>@])],
    [with_tdom=$withval])

AC_ARG_WITH([tcl],
  [AS_HELP_STRING([--with-tcl[=DIR]], 
    [Build tcl8.4.11 @<:@default=yes@:>@])],
    [with_tcl=$withval])

AC_ARG_WITH([tcllib],
  [AS_HELP_STRING([--with-tcllib[=DIR]], 
    [Build tcllib @<:@default=yes@:>@])],
    [with_tcllib=$withval])

AC_ARG_WITH([tk],
  [AS_HELP_STRING([--with-tk[=DIR]], 
    [Build tk8.4.11 @<:@default=yes@:>@])],
    [with_tk=$withval])

AC_ARG_WITH([tkimg],
  [AS_HELP_STRING([--with-tkimg[=DIR]], 
    [Build tkimg-1.3 @<:@default=yes@:>@])],
    [with_tkimg=$withval])

AC_ARG_WITH([tls],
  [AS_HELP_STRING([--with-tls[=DIR]], 
    [Build tls @<:@default=yes@:>@])],
    [with_tls=$withval])

AC_ARG_WITH([vtk],
  [AS_HELP_STRING([--with-vtk[=DIR]], 
    [Build vtk-4.4 @<:@default=no@:>@])],
    [with_vtk=$withval])

AC_ARG_WITH([zlib],
  [AS_HELP_STRING([--with-zlib[=DIR]], 
    [Build zlib-1.2.3 @<:@default=no@:>@])],
    [with_zlib=$withval])

AC_ARG_WITH([voronoi],
  [AS_HELP_STRING([--with-voronoi[=DIR]], 
    [Build voronoi @<:@default=no@:>@])],
    [with_voronoi=$withval])

AC_ARG_WITH([matlab], 
  [AS_HELP_STRING([--with-matlab[=DIR]],
    [Build MATLAB bindings if MEX compiler is found])],
    [with_matlab=$withval])
AC_ARG_WITH([matlab_arch], 
  [AS_HELP_STRING([--with-matlab-arch[=ARCH]],
    [Build MATLAB bindings for ARCH architecture])],
    [with_matlab_arch=$withval])

BUILD_BLT=$with_blt
BUILD_EXPAT=$with_expat
BUILD_SHAPE=$with_shape
BUILD_HTMLWIDGET=$with_htmlwidget
BUILD_ITCL=$with_itcl
BUILD_PYMOL=$with_pymol
BUILD_TDOM=$with_tDOM
BUILD_TK=$with_tk
BUILD_TCL=$with_tcl
BUILD_TCLLIB=$with_tcllib
BUILD_TKIMG=$with_tkimg
BUILD_TLS=$with_tls
BUILD_VTK=$with_vtk
BUILD_ZLIB=$with_zlib
BUILD_VORONOI=$with_voronoi

stage1_targets="EXPAT TCL TK ZLIB"
stage2_targets="ITCL ITK BLT SHAPE VORONOI HTMLWIDGET TDOM TCLLIB TKIMG TLS"
stage3_targets="VTK PYMOL"
libdir=$exec_prefix/lib
includedir=$prefix/include

#ac_configure_args="$ac_configure_args --enable-shared --disable-threads --with-tclincls=$includedir --with-tkincls=$includedir --with-ssl-dir=/usr --with-tk=$libdir --with-tcl=$PWD/tcl8.4.11 --with-tcl=$libdir --with-tcllibs=$libdir --with-tklibs=$libdir --with-tclconf=$libdir --with-tkconf=$libdir"

stage1_dirs=""
for i in $stage1_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" = "yes"; then
    eval ${var}=${!i}
    stage1_dirs="$stage1_dirs ${!i}"
  fi
done
stage2_dirs=""
for i in $stage2_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" = "yes"; then
    eval ${var}=${!i}
    stage2_dirs="$stage2_dirs ${!i}"
  fi
done
stage3_dirs=""
for i in $stage3_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" = "yes"; then
    eval ${var}=${!i}
    stage3_dirs="$stage3_dirs ${!i}"
  fi
done

AC_SUBST(X86_64)

if test "x${STAGE}" = "x"; then
   cwd=`pwd`
   STAGE=`basename $cwd`
fi

my_subdirs=""
my_makefile=""
if test "${STAGE}" = "stage1"; then
  my_subdirs=$stage1_dirs
  my_makefile="Makefile:stages/Makefile-stage1.in"
  ac_configure_args="$ac_configure_args --enable-shared --disable-threads"
fi
if test "${STAGE}" = "stage2"; then
  my_subdirs=$stage2_dirs
  my_makefile="Makefile:stages/Makefile-stage2.in"
  ac_configure_args="$ac_configure_args --enable-shared --disable-threads --with-tclincls=$includedir --with-tkincls=$includedir --with-ssl-dir=/usr --with-tk=$libdir --with-tcl=$libdir --with-tcl=$libdir --with-tcllibs=$libdir --with-tklibs=$libdir --with-tclconf=$libdir --with-tkconf=$libdir"
fi
if test "${STAGE}" = "stage3"; then
  my_subdirs=$stage3_dirs
  my_makefile="Makefile:stages/Makefile-stage3.in"
fi


AC_SUBST(BLT_DIR)
AC_SUBST(EXPAT_DIR)
AC_SUBST(HTMLWIDGET_DIR)
AC_SUBST(ITCL_DIR)
AC_SUBST(ITK_DIR)
AC_SUBST(PYMOL_DIR)
AC_SUBST(SHAPE_DIR)
AC_SUBST(TCLLIB_DIR)
AC_SUBST(TCL_DIR)
AC_SUBST(TDOM_DIR)
AC_SUBST(TKIMG_DIR)
AC_SUBST(TK_DIR)
AC_SUBST(TLS_DIR)
AC_SUBST(VORONOI_DIR)
AC_SUBST(VTK_DIR)
AC_SUBST(ZLIB_DIR)

if test "x${my_subdirs}" != "x"; then
  AC_CONFIG_SUBDIRS( ${my_subdirs} )
fi
if test "x${my_makefile}" != "x"; then
  AC_OUTPUT([ ${my_makefile} ])
fi
