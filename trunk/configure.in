AC_INIT(NOTES)

VERSION=0.0.1

AC_PREFIX

#------------------------------------------------------------------------
# Handle the --prefix=... option
#------------------------------------------------------------------------

if test "${prefix}" = "NONE"; then
    prefix=/usr/local
fi
if test "${exec_prefix}" = "NONE"; then
    exec_prefix=$prefix
fi

# RR_SRC_DIR=`cd $srcdir/..; pwd`
RR_SRC_DIR=`pwd`
AC_SUBST(RR_SRC_DIR)

dnl find and test the C compiler
AC_PROG_CC
AC_LANG_C

# AC_PROG_INSTALL
AC_PROG_MAKE_SET

AC_HEADER_STDC
AC_CHECK_FUNC(atol,,AC_MSG_ERROR(oops! no atol ?!?))

AC_SUBST(VERSION)

AC_ARG_ENABLE(64bit,       [  --enable-64bit              Enable 64bit support (where applicable)])
X86_64=
if test "x$enable_64bit" != "x" ; then
    echo Enabling 64-bit support
    X86_64="--enable-64bit"
fi

AC_ARG_WITH([blt],[AS_HELP_STRING([--with-blt[=DIR]], [use installed version of blt2.4z @<:@default=yes@:>@])],[],[with_blt=yes])
BUILD_BLT=$with_blt
AC_SUBST(BUILD_BLT)

AC_ARG_WITH([expat],[AS_HELP_STRING([--with-expat[=DIR]], [use installed version of expat @<:@default=yes@:>@])],[],[with_expat=yes])
BUILD_EXPAT=$with_expat
AC_SUBST(BUILD_EXPAT)

AC_ARG_WITH([htmlwidget],[AS_HELP_STRING([--with-htmlwidget[=DIR]], [use installed version of htmlwidget @<:@default=yes@:>@])],[],[with_htmlwidget=yes])
BUILD_HTMLWIDGET=$with_htmlwidget
AC_SUBST(BUILD_HTMLWIDGET)

AC_ARG_WITH([itcl],[AS_HELP_STRING([--with-itcl[=DIR]], [use installed version of itcl @<:@default=yes@:>@])],[],[with_itcl=yes])
BUILD_ITCL=$with_itcl
AC_SUBST(BUILD_ITCL)

AC_ARG_WITH([b64],[AS_HELP_STRING([--with-b64[=DIR]], [use installed version of b64 @<:@default=yes@:>@])],[],[with_b64=yes])
BUILD_LIBB64=$with_b64
AC_SUBST(BUILD_LIBB64)

AC_ARG_WITH([pymol],[AS_HELP_STRING([--with-pymol[=DIR]], [use installed version of pymol @<:@default=no@:>@])],[],[with_pymol=no])
BUILD_PYMOL=$with_pymol
AC_SUBST(BUILD_PYMOL)

AC_ARG_WITH([scew],[AS_HELP_STRING([--with-scew[=DIR]], [use installed version of scew @<:@default=yes@:>@])],[],[with_scew=yes])
BUILD_SCEW=$with_scew
AC_SUBST(BUILD_SCEW)

AC_ARG_WITH([shape],[AS_HELP_STRING([--with-shape[=DIR]], [use installed version of shape @<:@default=yes@:>@])],[],[with_shape=yes])
BUILD_SHAPE=$with_shape
AC_SUBST(BUILD_SHAPE)

AC_ARG_WITH([tDOM],[AS_HELP_STRING([--with-tDOM[=DIR]], [use installed version of tDOM @<:@default=yes@:>@])],[],[with_tDOM=yes])
BUILD_TDOM=$with_tDOM
AC_SUBST(BUILD_TDOM)

AC_ARG_WITH([tcl],[AS_HELP_STRING([--with-tcl[=DIR]], [use installed version of tcl @<:@default=yes@:>@])],[],[with_tcl=yes])
BUILD_TCL=$with_tcl
AC_SUBST(BUILD_TCL)

AC_ARG_WITH([tcllib],[AS_HELP_STRING([--with-tcllib[=DIR]], [use installed version of tcllib @<:@default=yes@:>@])],[],[with_tcllib=yes])
BUILD_TCLLIB=$with_tcllib
AC_SUBST(BUILD_TCLLIB)

AC_ARG_WITH([tk],[AS_HELP_STRING([--with-tk[=DIR]], [use installed version of tk @<:@default=yes@:>@])],[],[with_tk=yes])
BUILD_TK=$with_tk
AC_SUBST(BUILD_TK)

AC_ARG_WITH([tkimg],[AS_HELP_STRING([--with-tkimg[=DIR]], [use installed version of tkimg @<:@default=yes@:>@])],[],[with_tkimg=yes])
BUILD_TKIMG=$with_tkimg
AC_SUBST(BUILD_TKIMG)

AC_ARG_WITH([tls],[AS_HELP_STRING([--with-tls[=DIR]], [use installed version of tls @<:@default=yes@:>@])],[],[with_tls=yes])
BUILD_TLS=$with_tls
AC_SUBST(BUILD_TLS)

AC_ARG_WITH([vtk],[AS_HELP_STRING([--with-vtk[=DIR]], [use installed version of vtk @<:@default=yes@:>@])],[],[with_vtk=yes])
BUILD_VTK=$with_vtk
AC_SUBST(BUILD_VTK)

AC_ARG_WITH([zlib],[AS_HELP_STRING([--with-zlib[=DIR]], [use installed version of zlib @<:@default=yes@:>@])],[],[with_zlib=yes])
BUILD_ZLIB=$with_zlib
AC_SUBST(BUILD_ZLIB)

AC_ARG_WITH([voronoi],[AS_HELP_STRING([--with-voronoi[=DIR]], [use installed version of voronoi @<:@default=yes@:>@])],[],[with_voronoi=yes])
BUILD_VORONOI=$with_voronoi
AC_SUBST(BUILD_VORONOI)

AC_ARG_WITH(matlab,      [  --with-matlab[=DIR]         Build Matlab bindings if MEX compiler is found])
AC_ARG_WITH(matlab_arch, [  --with-matlab-arch[=ARCH]   Build Matlab bindings for ARCH architecture])

stage1_targets="EXPAT TCL TK VORONOI"
stage2_targets="ITCL ITK BLT SHAPE VORONOI HTMLWIDGET TDOM TCLLIB TKIMG TLS"
stage3_targets="VTK"
# PYMOL
libdir=$exec_prefix/lib
includedir=$prefix/include

#ac_configure_args="$ac_configure_args --enable-shared --disable-threads --with-tclincls=$includedir --with-tkincls=$includedir --with-ssl-dir=/usr --with-tk=$libdir --with-tcl=$PWD/tcl8.4.11 --with-tcl=$libdir --with-tcllibs=$libdir --with-tklibs=$libdir --with-tclconf=$libdir --with-tkconf=$libdir"

BLT=blt2.4z
EXPAT=expat-2.0.1
HTMLWIDGET=htmlwidget-3a14
ITCL=itcl3.3
ITK=itk3.3
LIBB64=libb64-1.1
PYMOL=pymol-1.00b19
SHAPE=shape0.4/unix
TCL=tcl8.4.11/unix
TCLLIB=tcllib-1.9
TDOM=tDOM-0.8.0
TK=tk8.4.11/unix
TKIMG=tkimg1.3
TLS=tls1.5
VORONOI=voronoi
VTK=VTK4.4 
ZLIB=zlib-1.2.3

stage1_dirs=""
for i in $stage1_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" != "no"; then
    eval ${var}=${!i}
    stage1_dirs="$stage1_dirs ${!i}"
  fi
done
stage2_dirs=""
for i in $stage2_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" != "no"; then
    eval ${var}=${!i}
    stage2_dirs="$stage2_dirs ${!i}"
  fi
done
stage3_dirs=""
for i in $stage3_targets; do
  build=BUILD_${i}
  var=${i}_DIR
  eval ${var}=""
  if test "${!build}" != "no"; then
    eval ${var}=${!i}
    stage3_dirs="$stage3_dirs ${!i}"
  fi
done

AC_SUBST(X86_64)

my_subdirs=""
my_makefile=""
if test "${STAGE}" = "stage1"; then
  my_subdirs=$stage1_dirs
  my_makefile="Makefile:stages/Makefile-stage1.in"
  ac_configure_args="$ac_configure_args --enable-shared --disable-threads"
fi
if test "${STAGE}" = "stage2"; then
  my_subdirs=$stage2_dirs
  my_makefile="Makefile:stages/Makefile-stage2.in"
  ac_configure_args="$ac_configure_args --enable-shared --disable-threads --with-tclincls=$includedir --with-tkincls=$includedir --with-ssl-dir=/usr --with-tk=$libdir --with-tcl=$libdir --with-tcl=$libdir --with-tcllibs=$libdir --with-tklibs=$libdir --with-tclconf=$libdir --with-tkconf=$libdir"
fi
if test "${STAGE}" = "stage3"; then
  my_subdirs=$stage3_dirs
  my_makefile="Makefile:stages/Makefile-stage3.in"
fi

AC_SUBST(BLT_DIR)
AC_SUBST(EXPAT_DIR)
AC_SUBST(HTMLWIDGET_DIR)
AC_SUBST(ITCL_DIR)
AC_SUBST(ITK_DIR)
AC_SUBST(PYMOL_DIR)
AC_SUBST(SHAPE_DIR)
AC_SUBST(TCLLIB_DIR)
AC_SUBST(TCL_DIR)
AC_SUBST(TDOM_DIR)
AC_SUBST(TKIMG_DIR)
AC_SUBST(TK_DIR)
AC_SUBST(TLS_DIR)
AC_SUBST(VORONOI_DIR)
AC_SUBST(VTK_DIR)
AC_SUBST(ZLIB_DIR)

if test "x${my_subdirs}" != "x"; then
  AC_CONFIG_SUBDIRS([ ${my_subdirs} ])
fi
if test "x${my_makefile}" != "x"; then
  AC_OUTPUT([ ${my_makefile} ])
fi
